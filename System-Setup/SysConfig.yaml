---

- name: Lazy System Setup

  hosts: localhost

  become: true

  tasks:

    - name: Include variables from vars/pkgs.yml
      ansible.builtin.include_vars: vars/pkgs.yml

    - name: Create a httpd server to host Apache Web Server
      ansible.builtin.package:
        name: httpd
        state: present
      notify: Start Apache

    - name: Configure VS Code repository using dnf
      ansible.builtin.yum_repository:
        name: vscode
        description: Visual Studio Code
        baseurl: https://packages.microsoft.com/yumrepos/vscode
        gpgcheck: true
        gpgkey: https://packages.microsoft.com/keys/microsoft.asc
        state: present

    - name: Configure the GitHub CLI repository
      ansible.builtin.yum_repository:
        name: gh
        description: GitHub CLI
        baseurl: "{{ GitHub_CLI_baseurl }}"
        gpgcheck: true
        gpgkey: "{{ GitHub_CLI_keyring }}"
        state: present

    - name: Disable the copr:copr.fedorainfracloud.org:phracek:PyCharm repository
      ansible.builtin.yum_repository:
        name: copr:copr.fedorainfracloud.org:phracek:PyCharm
        state: absent

    - name: Install the required packages listed in the vars/pkgs.yml file using dnf
      ansible.builtin.dnf:
        name: "{{ pkgs }}"
        state: present
        update_cache: true

    - name: Install Python packages from requirements file located at vars/requirements.txt using pip
      ansible.builtin.pip:
        requirements: "{{ pip_requirements }}"

    - name: Setup group 'SK'
      ansible.builtin.group:
        name: 'sk'
        state: present

    - name: Setup User 'SK' with 'bash' as the default shell
      ansible.builtin.user:
        name: 'sk'
        group: 'sk'
        groups: 'wheel'
        password: "{{ '1' | password_hash('sha512') }}"
        shell: '/bin/bash'
        createhome: true
        skeleton: '/etc/skel'

    - name: Configure Git for 'SK' 'trivedisaksham@gmail.com' and 'code' as the default editor
      community.general.git_config:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        scope: global
      with_items:
        - { name: 'user.name', value: 'SK' }
        - { name: 'user.email', value: 'trivedisaksham@gmail.com' }
        - { name: 'core.editor', value: 'code' }

    - name: Install and Setup MariaDB Server and set the mariadb root password to 'root'
      ansible.builtin.package:
        name: mariadb-server
        state: present
      notify: Start MariaDB Service

    - name: Install Apache-Spark and configure the home directory
      ansible.builtin.get_url:
        url: "{{ spark_url }}"
        dest: "{{ spark_archive }}"
        mode: '0755'
      notify: Extract Apache Spark

  handlers:
    - name: Start MariaDB Service
      ansible.builtin.service:
        name: mariadb
        state: started
        enabled: true

    - name: Extract Apache Spark
      ansible.builtin.unarchive:
        src: "{{ spark_archive }}"
        dest: "{{ spark_home_dir }}"
        # remote_src: true
        creates: "{{ SPARK_HOME }}"
      notify: Set Spark Environment Variables

    - name: Set Spark Environment Variables
      ansible.builtin.lineinfile:
        path: '~/.bashrc'
        line: "{{ item }}"
        create: true
        mode: '0644'
      with_items:
        - "{{ aliases }}"
